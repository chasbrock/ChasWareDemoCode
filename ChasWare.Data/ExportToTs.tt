<#@ template debug="true" hostSpecific="true" language="C#" #>
<#@ output extension=".log" #>
<#@ assembly Name="System.Core.dll" #>
<#@ assembly name="$(TargetDir)ChasWare.Common.dll" #>
<#@ assembly name="$(TargetDir)ChasWare.Data.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="ChasWare.Data" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Linq" #>

<# 
	IEnumerable<Type> types =  ChasWare.Common.Utils.Transform.TsTransformTools.GetExportedTypes("ChasWare.Data");
	string targetPath = GetTarget("//Exported", Host);
	foreach (Type t in types)
    {
       WriteLine("Extracting " + t.Name + " to " + targetPath);
	   string content = ChasWare.Common.Utils.Transform.TsTransformTools.ExtractClass(t, types);
	   ChasWare.Common.Utils.Transform.TsTransformTools.PrintToFile(t, content, targetPath, ".d.ts");
   }
 #>

<#+
	string GetTarget(string relativeOutputFilePath,  Microsoft.VisualStudio.TextTemplating.ITextTemplatingEngineHost host)
    {
        string outputPath = System.IO.Path.GetDirectoryName(host.TemplateFile);
        return System.IO.Path.Combine(outputPath + relativeOutputFilePath);
    }

#>